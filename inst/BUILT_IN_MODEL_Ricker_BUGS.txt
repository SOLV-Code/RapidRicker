model{
	# adapted from code originally developed by Catherine Michielsens, Sue Grant, and Bronwyn MacDonald.
	# modified to incorporate Smax upper constraint (and replaced C with Smax)


    for (i in 1:N) {                       #loop over N sample points
      R_Obs[i] ~ dlnorm(logR[i],tau_R)          #likelihood -> predicted value for NA in data set
      logR[i] <- RS[i] +log(S[i])               # calc log(R) - fitted values
      RS[i] <- ln.alpha - beta * S[i]           # ricker model
   }


    ln.alpha ~ dnorm(p.alpha,tau_alpha)        #prior for alpha (actually ln.alpha!) -> fix?
    beta <-1/ S.max					   # prior for beta

	# new constraint June 2021
	# typical default is to  set p.beta set at log(max obs Spn)
	# and max.scalar at 3, so that the Smax prior is bounded by 3 times the largest observed Spn
    S.max ~ dlnorm(p.beta, tau_beta) T(0,Smax.limit)
	Smax.limit <- max.scalar * exp(p.beta)
	
    tau_R ~ dgamma(shape.tau_R,lambda_tau_R)             #prior for precision parameter
    sigma <- 1/sqrt(tau_R) 			# changed based on Fleishman and Evenson

	ln.alpha.c <- ln.alpha + (sigma * sigma / 2) # bias correction for lognormal skewness

    #BIOLOGICAL BENCHMARKS
    # adapted from code in Miller & Pestal 2020 Taku Sockeye Res Doc

    alpha.c <- min(exp(ln.alpha.c),1.0E4)
    S.eq.c <- ln.alpha.c * S.max

	# Hilborn Proxy ("_h" in the output from calcDetRickerBM)
    U.msy.c <- ln.alpha.c * (0.5-0.07*ln.alpha.c)
    S.msy.c <- S.eq.c *(0.5-0.07*ln.alpha.c)

	# Peterman Approximation ("_p" in the output from calcDetRickerBM)
    positive.lna.c <- step(ln.alpha.c)
    ln.alpha.c.nonneg <- ln.alpha.c * positive.lna.c
    S.eq.c2 <- ln.alpha.c.nonneg * S.max
    peterman.approx.c <- (0.5 - 0.65*pow(ln.alpha.c.nonneg,1.27) / (8.7 +pow(ln.alpha.c.nonneg,1.27)))
    U.msy.c2 <- ln.alpha.c.nonneg * peterman.approx.c
    S.msy.c2 <- U.msy.c2 / beta
    U.max.c2 <- 1 - 1 / exp(ln.alpha.c.nonneg)

}
